Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LPAREN
    RPAREN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENTIFIER SEMICOLON declaration_list compound_statement DOT
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> empty
Rule 4     declaration -> VAR variable_list COLON type SEMICOLON
Rule 5     variable_list -> variable_list COMMA IDENTIFIER
Rule 6     variable_list -> IDENTIFIER
Rule 7     type -> INTEGER
Rule 8     type -> REAL
Rule 9     compound_statement -> BEGIN statement_list END
Rule 10    statement_list -> statement_list SEMICOLON statement
Rule 11    statement_list -> statement
Rule 12    statement -> assignment_statement
Rule 13    statement -> if_statement
Rule 14    statement -> while_statement
Rule 15    statement -> read_statement
Rule 16    statement -> write_statement
Rule 17    assignment_statement -> IDENTIFIER ASSIGN expression
Rule 18    if_statement -> IF expression THEN statement
Rule 19    if_statement -> IF expression THEN statement ELSE statement
Rule 20    while_statement -> WHILE expression DO statement
Rule 21    read_statement -> READ IDENTIFIER
Rule 22    write_statement -> WRITE expression
Rule 23    relational_expression -> expression GREATER expression
Rule 24    relational_expression -> expression LESS expression
Rule 25    relational_expression -> expression GREATER_EQUAL expression
Rule 26    relational_expression -> expression LESS_EQUAL expression
Rule 27    expression -> relational_expression
Rule 28    expression -> expression PLUS term
Rule 29    expression -> expression MINUS term
Rule 30    expression -> term
Rule 31    term -> term TIMES factor
Rule 32    term -> term DIVIDE factor
Rule 33    term -> factor
Rule 34    factor -> NUMBER
Rule 35    factor -> IDENTIFIER
Rule 36    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 17
BEGIN                : 9
COLON                : 4
COMMA                : 5
DIVIDE               : 32
DO                   : 20
DOT                  : 1
ELSE                 : 19
END                  : 9
GREATER              : 23
GREATER_EQUAL        : 25
IDENTIFIER           : 1 5 6 17 21 35
IF                   : 18 19
INTEGER              : 7
LESS                 : 24
LESS_EQUAL           : 26
LPAREN               : 
MINUS                : 29
NUMBER               : 34
PLUS                 : 28
PROGRAM              : 1
READ                 : 21
REAL                 : 8
RPAREN               : 
SEMICOLON            : 1 4 10
THEN                 : 18 19
TIMES                : 31
VAR                  : 4
WHILE                : 20
WRITE                : 22
error                : 

Nonterminals, with rules where they appear

assignment_statement : 12
compound_statement   : 1
declaration          : 2
declaration_list     : 1 2
empty                : 3
expression           : 17 18 19 20 22 23 23 24 24 25 25 26 26 28 29
factor               : 31 32 33
if_statement         : 13
program              : 0
read_statement       : 15
relational_expression : 27
statement            : 10 11 18 19 19 20
statement_list       : 9 10
term                 : 28 29 30 31 32
type                 : 4
variable_list        : 4 5
while_statement      : 14
write_statement      : 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENTIFIER SEMICOLON declaration_list compound_statement DOT

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENTIFIER SEMICOLON declaration_list compound_statement DOT

    IDENTIFIER      shift and go to state 3


state 3

    (1) program -> PROGRAM IDENTIFIER . SEMICOLON declaration_list compound_statement DOT

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENTIFIER SEMICOLON . declaration_list compound_statement DOT
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . empty
    (36) empty -> .

    BEGIN           reduce using rule 36 (empty -> .)
    VAR             reduce using rule 36 (empty -> .)

    declaration_list               shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM IDENTIFIER SEMICOLON declaration_list . compound_statement DOT
    (2) declaration_list -> declaration_list . declaration
    (9) compound_statement -> . BEGIN statement_list END
    (4) declaration -> . VAR variable_list COLON type SEMICOLON

    BEGIN           shift and go to state 9
    VAR             shift and go to state 10

    compound_statement             shift and go to state 7
    declaration                    shift and go to state 8

state 6

    (3) declaration_list -> empty .

    BEGIN           reduce using rule 3 (declaration_list -> empty .)
    VAR             reduce using rule 3 (declaration_list -> empty .)


state 7

    (1) program -> PROGRAM IDENTIFIER SEMICOLON declaration_list compound_statement . DOT

    DOT             shift and go to state 11


state 8

    (2) declaration_list -> declaration_list declaration .

    BEGIN           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VAR             reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 9

    (9) compound_statement -> BEGIN . statement_list END
    (10) statement_list -> . statement_list SEMICOLON statement
    (11) statement_list -> . statement
    (12) statement -> . assignment_statement
    (13) statement -> . if_statement
    (14) statement -> . while_statement
    (15) statement -> . read_statement
    (16) statement -> . write_statement
    (17) assignment_statement -> . IDENTIFIER ASSIGN expression
    (18) if_statement -> . IF expression THEN statement
    (19) if_statement -> . IF expression THEN statement ELSE statement
    (20) while_statement -> . WHILE expression DO statement
    (21) read_statement -> . READ IDENTIFIER
    (22) write_statement -> . WRITE expression

    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    READ            shift and go to state 22
    WRITE           shift and go to state 23

    statement_list                 shift and go to state 12
    statement                      shift and go to state 13
    assignment_statement           shift and go to state 14
    if_statement                   shift and go to state 15
    while_statement                shift and go to state 16
    read_statement                 shift and go to state 17
    write_statement                shift and go to state 18

state 10

    (4) declaration -> VAR . variable_list COLON type SEMICOLON
    (5) variable_list -> . variable_list COMMA IDENTIFIER
    (6) variable_list -> . IDENTIFIER

    IDENTIFIER      shift and go to state 25

    variable_list                  shift and go to state 24

state 11

    (1) program -> PROGRAM IDENTIFIER SEMICOLON declaration_list compound_statement DOT .

    $end            reduce using rule 1 (program -> PROGRAM IDENTIFIER SEMICOLON declaration_list compound_statement DOT .)


state 12

    (9) compound_statement -> BEGIN statement_list . END
    (10) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 26
    SEMICOLON       shift and go to state 27


state 13

    (11) statement_list -> statement .

    END             reduce using rule 11 (statement_list -> statement .)
    SEMICOLON       reduce using rule 11 (statement_list -> statement .)


state 14

    (12) statement -> assignment_statement .

    END             reduce using rule 12 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 12 (statement -> assignment_statement .)
    ELSE            reduce using rule 12 (statement -> assignment_statement .)


state 15

    (13) statement -> if_statement .

    END             reduce using rule 13 (statement -> if_statement .)
    SEMICOLON       reduce using rule 13 (statement -> if_statement .)
    ELSE            reduce using rule 13 (statement -> if_statement .)


state 16

    (14) statement -> while_statement .

    END             reduce using rule 14 (statement -> while_statement .)
    SEMICOLON       reduce using rule 14 (statement -> while_statement .)
    ELSE            reduce using rule 14 (statement -> while_statement .)


state 17

    (15) statement -> read_statement .

    END             reduce using rule 15 (statement -> read_statement .)
    SEMICOLON       reduce using rule 15 (statement -> read_statement .)
    ELSE            reduce using rule 15 (statement -> read_statement .)


state 18

    (16) statement -> write_statement .

    END             reduce using rule 16 (statement -> write_statement .)
    SEMICOLON       reduce using rule 16 (statement -> write_statement .)
    ELSE            reduce using rule 16 (statement -> write_statement .)


state 19

    (17) assignment_statement -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 28


state 20

    (18) if_statement -> IF . expression THEN statement
    (19) if_statement -> IF . expression THEN statement ELSE statement
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 29
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 21

    (20) while_statement -> WHILE . expression DO statement
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 35
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 22

    (21) read_statement -> READ . IDENTIFIER

    IDENTIFIER      shift and go to state 36


state 23

    (22) write_statement -> WRITE . expression
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 37
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 24

    (4) declaration -> VAR variable_list . COLON type SEMICOLON
    (5) variable_list -> variable_list . COMMA IDENTIFIER

    COLON           shift and go to state 38
    COMMA           shift and go to state 39


state 25

    (6) variable_list -> IDENTIFIER .

    COLON           reduce using rule 6 (variable_list -> IDENTIFIER .)
    COMMA           reduce using rule 6 (variable_list -> IDENTIFIER .)


state 26

    (9) compound_statement -> BEGIN statement_list END .

    DOT             reduce using rule 9 (compound_statement -> BEGIN statement_list END .)


state 27

    (10) statement_list -> statement_list SEMICOLON . statement
    (12) statement -> . assignment_statement
    (13) statement -> . if_statement
    (14) statement -> . while_statement
    (15) statement -> . read_statement
    (16) statement -> . write_statement
    (17) assignment_statement -> . IDENTIFIER ASSIGN expression
    (18) if_statement -> . IF expression THEN statement
    (19) if_statement -> . IF expression THEN statement ELSE statement
    (20) while_statement -> . WHILE expression DO statement
    (21) read_statement -> . READ IDENTIFIER
    (22) write_statement -> . WRITE expression

    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    READ            shift and go to state 22
    WRITE           shift and go to state 23

    statement                      shift and go to state 40
    assignment_statement           shift and go to state 14
    if_statement                   shift and go to state 15
    while_statement                shift and go to state 16
    read_statement                 shift and go to state 17
    write_statement                shift and go to state 18

state 28

    (17) assignment_statement -> IDENTIFIER ASSIGN . expression
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 41
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 29

    (18) if_statement -> IF expression . THEN statement
    (19) if_statement -> IF expression . THEN statement ELSE statement
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

    THEN            shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48


state 30

    (27) expression -> relational_expression .

    THEN            reduce using rule 27 (expression -> relational_expression .)
    PLUS            reduce using rule 27 (expression -> relational_expression .)
    MINUS           reduce using rule 27 (expression -> relational_expression .)
    GREATER         reduce using rule 27 (expression -> relational_expression .)
    LESS            reduce using rule 27 (expression -> relational_expression .)
    GREATER_EQUAL   reduce using rule 27 (expression -> relational_expression .)
    LESS_EQUAL      reduce using rule 27 (expression -> relational_expression .)
    DO              reduce using rule 27 (expression -> relational_expression .)
    END             reduce using rule 27 (expression -> relational_expression .)
    SEMICOLON       reduce using rule 27 (expression -> relational_expression .)
    ELSE            reduce using rule 27 (expression -> relational_expression .)


state 31

    (30) expression -> term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    THEN            reduce using rule 30 (expression -> term .)
    PLUS            reduce using rule 30 (expression -> term .)
    MINUS           reduce using rule 30 (expression -> term .)
    GREATER         reduce using rule 30 (expression -> term .)
    LESS            reduce using rule 30 (expression -> term .)
    GREATER_EQUAL   reduce using rule 30 (expression -> term .)
    LESS_EQUAL      reduce using rule 30 (expression -> term .)
    DO              reduce using rule 30 (expression -> term .)
    END             reduce using rule 30 (expression -> term .)
    SEMICOLON       reduce using rule 30 (expression -> term .)
    ELSE            reduce using rule 30 (expression -> term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 32

    (33) term -> factor .

    TIMES           reduce using rule 33 (term -> factor .)
    DIVIDE          reduce using rule 33 (term -> factor .)
    THEN            reduce using rule 33 (term -> factor .)
    PLUS            reduce using rule 33 (term -> factor .)
    MINUS           reduce using rule 33 (term -> factor .)
    GREATER         reduce using rule 33 (term -> factor .)
    LESS            reduce using rule 33 (term -> factor .)
    GREATER_EQUAL   reduce using rule 33 (term -> factor .)
    LESS_EQUAL      reduce using rule 33 (term -> factor .)
    DO              reduce using rule 33 (term -> factor .)
    END             reduce using rule 33 (term -> factor .)
    SEMICOLON       reduce using rule 33 (term -> factor .)
    ELSE            reduce using rule 33 (term -> factor .)


state 33

    (34) factor -> NUMBER .

    TIMES           reduce using rule 34 (factor -> NUMBER .)
    DIVIDE          reduce using rule 34 (factor -> NUMBER .)
    THEN            reduce using rule 34 (factor -> NUMBER .)
    PLUS            reduce using rule 34 (factor -> NUMBER .)
    MINUS           reduce using rule 34 (factor -> NUMBER .)
    GREATER         reduce using rule 34 (factor -> NUMBER .)
    LESS            reduce using rule 34 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 34 (factor -> NUMBER .)
    LESS_EQUAL      reduce using rule 34 (factor -> NUMBER .)
    DO              reduce using rule 34 (factor -> NUMBER .)
    END             reduce using rule 34 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 34 (factor -> NUMBER .)
    ELSE            reduce using rule 34 (factor -> NUMBER .)


state 34

    (35) factor -> IDENTIFIER .

    TIMES           reduce using rule 35 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 35 (factor -> IDENTIFIER .)
    THEN            reduce using rule 35 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 35 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 35 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 35 (factor -> IDENTIFIER .)
    LESS            reduce using rule 35 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 35 (factor -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 35 (factor -> IDENTIFIER .)
    DO              reduce using rule 35 (factor -> IDENTIFIER .)
    END             reduce using rule 35 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 35 (factor -> IDENTIFIER .)
    ELSE            reduce using rule 35 (factor -> IDENTIFIER .)


state 35

    (20) while_statement -> WHILE expression . DO statement
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

    DO              shift and go to state 51
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48


state 36

    (21) read_statement -> READ IDENTIFIER .

    END             reduce using rule 21 (read_statement -> READ IDENTIFIER .)
    SEMICOLON       reduce using rule 21 (read_statement -> READ IDENTIFIER .)
    ELSE            reduce using rule 21 (read_statement -> READ IDENTIFIER .)


state 37

    (22) write_statement -> WRITE expression .
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

    END             reduce using rule 22 (write_statement -> WRITE expression .)
    SEMICOLON       reduce using rule 22 (write_statement -> WRITE expression .)
    ELSE            reduce using rule 22 (write_statement -> WRITE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48


state 38

    (4) declaration -> VAR variable_list COLON . type SEMICOLON
    (7) type -> . INTEGER
    (8) type -> . REAL

    INTEGER         shift and go to state 53
    REAL            shift and go to state 54

    type                           shift and go to state 52

state 39

    (5) variable_list -> variable_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 55


state 40

    (10) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 10 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 10 (statement_list -> statement_list SEMICOLON statement .)


state 41

    (17) assignment_statement -> IDENTIFIER ASSIGN expression .
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

    END             reduce using rule 17 (assignment_statement -> IDENTIFIER ASSIGN expression .)
    SEMICOLON       reduce using rule 17 (assignment_statement -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 17 (assignment_statement -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48


state 42

    (18) if_statement -> IF expression THEN . statement
    (19) if_statement -> IF expression THEN . statement ELSE statement
    (12) statement -> . assignment_statement
    (13) statement -> . if_statement
    (14) statement -> . while_statement
    (15) statement -> . read_statement
    (16) statement -> . write_statement
    (17) assignment_statement -> . IDENTIFIER ASSIGN expression
    (18) if_statement -> . IF expression THEN statement
    (19) if_statement -> . IF expression THEN statement ELSE statement
    (20) while_statement -> . WHILE expression DO statement
    (21) read_statement -> . READ IDENTIFIER
    (22) write_statement -> . WRITE expression

    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    READ            shift and go to state 22
    WRITE           shift and go to state 23

    statement                      shift and go to state 56
    assignment_statement           shift and go to state 14
    if_statement                   shift and go to state 15
    while_statement                shift and go to state 16
    read_statement                 shift and go to state 17
    write_statement                shift and go to state 18

state 43

    (28) expression -> expression PLUS . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    term                           shift and go to state 57
    factor                         shift and go to state 32

state 44

    (29) expression -> expression MINUS . term
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    term                           shift and go to state 58
    factor                         shift and go to state 32

state 45

    (23) relational_expression -> expression GREATER . expression
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 59
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 46

    (24) relational_expression -> expression LESS . expression
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 60
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 47

    (25) relational_expression -> expression GREATER_EQUAL . expression
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 61
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 48

    (26) relational_expression -> expression LESS_EQUAL . expression
    (27) expression -> . relational_expression
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (23) relational_expression -> . expression GREATER expression
    (24) relational_expression -> . expression LESS expression
    (25) relational_expression -> . expression GREATER_EQUAL expression
    (26) relational_expression -> . expression LESS_EQUAL expression
    (31) term -> . term TIMES factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    expression                     shift and go to state 62
    relational_expression          shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 49

    (31) term -> term TIMES . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    factor                         shift and go to state 63

state 50

    (32) term -> term DIVIDE . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER

    NUMBER          shift and go to state 33
    IDENTIFIER      shift and go to state 34

    factor                         shift and go to state 64

state 51

    (20) while_statement -> WHILE expression DO . statement
    (12) statement -> . assignment_statement
    (13) statement -> . if_statement
    (14) statement -> . while_statement
    (15) statement -> . read_statement
    (16) statement -> . write_statement
    (17) assignment_statement -> . IDENTIFIER ASSIGN expression
    (18) if_statement -> . IF expression THEN statement
    (19) if_statement -> . IF expression THEN statement ELSE statement
    (20) while_statement -> . WHILE expression DO statement
    (21) read_statement -> . READ IDENTIFIER
    (22) write_statement -> . WRITE expression

    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    READ            shift and go to state 22
    WRITE           shift and go to state 23

    statement                      shift and go to state 65
    assignment_statement           shift and go to state 14
    if_statement                   shift and go to state 15
    while_statement                shift and go to state 16
    read_statement                 shift and go to state 17
    write_statement                shift and go to state 18

state 52

    (4) declaration -> VAR variable_list COLON type . SEMICOLON

    SEMICOLON       shift and go to state 66


state 53

    (7) type -> INTEGER .

    SEMICOLON       reduce using rule 7 (type -> INTEGER .)


state 54

    (8) type -> REAL .

    SEMICOLON       reduce using rule 8 (type -> REAL .)


state 55

    (5) variable_list -> variable_list COMMA IDENTIFIER .

    COLON           reduce using rule 5 (variable_list -> variable_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 5 (variable_list -> variable_list COMMA IDENTIFIER .)


state 56

    (18) if_statement -> IF expression THEN statement .
    (19) if_statement -> IF expression THEN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    END             reduce using rule 18 (if_statement -> IF expression THEN statement .)
    SEMICOLON       reduce using rule 18 (if_statement -> IF expression THEN statement .)
    ELSE            shift and go to state 67

  ! ELSE            [ reduce using rule 18 (if_statement -> IF expression THEN statement .) ]


state 57

    (28) expression -> expression PLUS term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    THEN            reduce using rule 28 (expression -> expression PLUS term .)
    PLUS            reduce using rule 28 (expression -> expression PLUS term .)
    MINUS           reduce using rule 28 (expression -> expression PLUS term .)
    GREATER         reduce using rule 28 (expression -> expression PLUS term .)
    LESS            reduce using rule 28 (expression -> expression PLUS term .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression PLUS term .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression PLUS term .)
    DO              reduce using rule 28 (expression -> expression PLUS term .)
    END             reduce using rule 28 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 28 (expression -> expression PLUS term .)
    ELSE            reduce using rule 28 (expression -> expression PLUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 58

    (29) expression -> expression MINUS term .
    (31) term -> term . TIMES factor
    (32) term -> term . DIVIDE factor

    THEN            reduce using rule 29 (expression -> expression MINUS term .)
    PLUS            reduce using rule 29 (expression -> expression MINUS term .)
    MINUS           reduce using rule 29 (expression -> expression MINUS term .)
    GREATER         reduce using rule 29 (expression -> expression MINUS term .)
    LESS            reduce using rule 29 (expression -> expression MINUS term .)
    GREATER_EQUAL   reduce using rule 29 (expression -> expression MINUS term .)
    LESS_EQUAL      reduce using rule 29 (expression -> expression MINUS term .)
    DO              reduce using rule 29 (expression -> expression MINUS term .)
    END             reduce using rule 29 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 29 (expression -> expression MINUS term .)
    ELSE            reduce using rule 29 (expression -> expression MINUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 59

    (23) relational_expression -> expression GREATER expression .
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
    THEN            reduce using rule 23 (relational_expression -> expression GREATER expression .)
    DO              reduce using rule 23 (relational_expression -> expression GREATER expression .)
    END             reduce using rule 23 (relational_expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 23 (relational_expression -> expression GREATER expression .)
    ELSE            reduce using rule 23 (relational_expression -> expression GREATER expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48

  ! PLUS            [ reduce using rule 23 (relational_expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 23 (relational_expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 23 (relational_expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 23 (relational_expression -> expression GREATER expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 23 (relational_expression -> expression GREATER expression .) ]
  ! LESS_EQUAL      [ reduce using rule 23 (relational_expression -> expression GREATER expression .) ]


state 60

    (24) relational_expression -> expression LESS expression .
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
    THEN            reduce using rule 24 (relational_expression -> expression LESS expression .)
    DO              reduce using rule 24 (relational_expression -> expression LESS expression .)
    END             reduce using rule 24 (relational_expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 24 (relational_expression -> expression LESS expression .)
    ELSE            reduce using rule 24 (relational_expression -> expression LESS expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48

  ! PLUS            [ reduce using rule 24 (relational_expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 24 (relational_expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 24 (relational_expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 24 (relational_expression -> expression LESS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 24 (relational_expression -> expression LESS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 24 (relational_expression -> expression LESS expression .) ]


state 61

    (25) relational_expression -> expression GREATER_EQUAL expression .
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
    THEN            reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .)
    DO              reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .)
    END             reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48

  ! PLUS            [ reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .) ]
  ! GREATER         [ reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .) ]
  ! LESS            [ reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .) ]
  ! LESS_EQUAL      [ reduce using rule 25 (relational_expression -> expression GREATER_EQUAL expression .) ]


state 62

    (26) relational_expression -> expression LESS_EQUAL expression .
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term
    (23) relational_expression -> expression . GREATER expression
    (24) relational_expression -> expression . LESS expression
    (25) relational_expression -> expression . GREATER_EQUAL expression
    (26) relational_expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
    THEN            reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .)
    DO              reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .)
    END             reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    LESS_EQUAL      shift and go to state 48

  ! PLUS            [ reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .) ]
  ! GREATER         [ reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .) ]
  ! LESS            [ reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .) ]
  ! LESS_EQUAL      [ reduce using rule 26 (relational_expression -> expression LESS_EQUAL expression .) ]


state 63

    (31) term -> term TIMES factor .

    TIMES           reduce using rule 31 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 31 (term -> term TIMES factor .)
    THEN            reduce using rule 31 (term -> term TIMES factor .)
    PLUS            reduce using rule 31 (term -> term TIMES factor .)
    MINUS           reduce using rule 31 (term -> term TIMES factor .)
    GREATER         reduce using rule 31 (term -> term TIMES factor .)
    LESS            reduce using rule 31 (term -> term TIMES factor .)
    GREATER_EQUAL   reduce using rule 31 (term -> term TIMES factor .)
    LESS_EQUAL      reduce using rule 31 (term -> term TIMES factor .)
    DO              reduce using rule 31 (term -> term TIMES factor .)
    END             reduce using rule 31 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 31 (term -> term TIMES factor .)
    ELSE            reduce using rule 31 (term -> term TIMES factor .)


state 64

    (32) term -> term DIVIDE factor .

    TIMES           reduce using rule 32 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 32 (term -> term DIVIDE factor .)
    THEN            reduce using rule 32 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 32 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 32 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 32 (term -> term DIVIDE factor .)
    LESS            reduce using rule 32 (term -> term DIVIDE factor .)
    GREATER_EQUAL   reduce using rule 32 (term -> term DIVIDE factor .)
    LESS_EQUAL      reduce using rule 32 (term -> term DIVIDE factor .)
    DO              reduce using rule 32 (term -> term DIVIDE factor .)
    END             reduce using rule 32 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 32 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 32 (term -> term DIVIDE factor .)


state 65

    (20) while_statement -> WHILE expression DO statement .

    END             reduce using rule 20 (while_statement -> WHILE expression DO statement .)
    SEMICOLON       reduce using rule 20 (while_statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 20 (while_statement -> WHILE expression DO statement .)


state 66

    (4) declaration -> VAR variable_list COLON type SEMICOLON .

    BEGIN           reduce using rule 4 (declaration -> VAR variable_list COLON type SEMICOLON .)
    VAR             reduce using rule 4 (declaration -> VAR variable_list COLON type SEMICOLON .)


state 67

    (19) if_statement -> IF expression THEN statement ELSE . statement
    (12) statement -> . assignment_statement
    (13) statement -> . if_statement
    (14) statement -> . while_statement
    (15) statement -> . read_statement
    (16) statement -> . write_statement
    (17) assignment_statement -> . IDENTIFIER ASSIGN expression
    (18) if_statement -> . IF expression THEN statement
    (19) if_statement -> . IF expression THEN statement ELSE statement
    (20) while_statement -> . WHILE expression DO statement
    (21) read_statement -> . READ IDENTIFIER
    (22) write_statement -> . WRITE expression

    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    READ            shift and go to state 22
    WRITE           shift and go to state 23

    statement                      shift and go to state 68
    assignment_statement           shift and go to state 14
    if_statement                   shift and go to state 15
    while_statement                shift and go to state 16
    read_statement                 shift and go to state 17
    write_statement                shift and go to state 18

state 68

    (19) if_statement -> IF expression THEN statement ELSE statement .

    END             reduce using rule 19 (if_statement -> IF expression THEN statement ELSE statement .)
    SEMICOLON       reduce using rule 19 (if_statement -> IF expression THEN statement ELSE statement .)
    ELSE            reduce using rule 19 (if_statement -> IF expression THEN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 59 resolved as shift
WARNING: shift/reduce conflict for LESS in state 59 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 59 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 60 resolved as shift
WARNING: shift/reduce conflict for LESS in state 60 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 61 resolved as shift
WARNING: shift/reduce conflict for LESS in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 62 resolved as shift
WARNING: shift/reduce conflict for LESS in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 62 resolved as shift
